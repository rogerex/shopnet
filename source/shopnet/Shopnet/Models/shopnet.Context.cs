//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace Shopnet.Models
{
    public partial class ShopnetEntities : ObjectContext
    {
        public const string ConnectionString = "name=ShopnetEntities";
        public const string ContainerName = "ShopnetEntities";
    
        #region Constructors
    
        public ShopnetEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public ShopnetEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public ShopnetEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<CUSTOMER> CUSTOMERs
        {
            get { return _cUSTOMERs  ?? (_cUSTOMERs = CreateObjectSet<CUSTOMER>("CUSTOMERs")); }
        }
        private ObjectSet<CUSTOMER> _cUSTOMERs;
    
        public ObjectSet<DetailOrder> DetailOrders
        {
            get { return _detailOrders  ?? (_detailOrders = CreateObjectSet<DetailOrder>("DetailOrders")); }
        }
        private ObjectSet<DetailOrder> _detailOrders;
    
        public ObjectSet<ITEM> ITEMs
        {
            get { return _iTEMs  ?? (_iTEMs = CreateObjectSet<ITEM>("ITEMs")); }
        }
        private ObjectSet<ITEM> _iTEMs;
    
        public ObjectSet<PAYMENT> PAYMENTs
        {
            get { return _pAYMENTs  ?? (_pAYMENTs = CreateObjectSet<PAYMENT>("PAYMENTs")); }
        }
        private ObjectSet<PAYMENT> _pAYMENTs;
    
        public ObjectSet<Product> Products
        {
            get { return _products  ?? (_products = CreateObjectSet<Product>("Products")); }
        }
        private ObjectSet<Product> _products;
    
        public ObjectSet<PROVIDER> PROVIDERs
        {
            get { return _pROVIDERs  ?? (_pROVIDERs = CreateObjectSet<PROVIDER>("PROVIDERs")); }
        }
        private ObjectSet<PROVIDER> _pROVIDERs;
    
        public ObjectSet<PURCHASE_ORDER> PURCHASE_ORDER
        {
            get { return _pURCHASE_ORDER  ?? (_pURCHASE_ORDER = CreateObjectSet<PURCHASE_ORDER>("PURCHASE_ORDER")); }
        }
        private ObjectSet<PURCHASE_ORDER> _pURCHASE_ORDER;
    
        public ObjectSet<ROLE> ROLEs
        {
            get { return _rOLEs  ?? (_rOLEs = CreateObjectSet<ROLE>("ROLEs")); }
        }
        private ObjectSet<ROLE> _rOLEs;
    
        public ObjectSet<SaleOrder> SaleOrders
        {
            get { return _saleOrders  ?? (_saleOrders = CreateObjectSet<SaleOrder>("SaleOrders")); }
        }
        private ObjectSet<SaleOrder> _saleOrders;
    
        public ObjectSet<SESSION> SESSIONs
        {
            get { return _sESSIONs  ?? (_sESSIONs = CreateObjectSet<SESSION>("SESSIONs")); }
        }
        private ObjectSet<SESSION> _sESSIONs;
    
        public ObjectSet<STOCK> STOCKs
        {
            get { return _sTOCKs  ?? (_sTOCKs = CreateObjectSet<STOCK>("STOCKs")); }
        }
        private ObjectSet<STOCK> _sTOCKs;
    
        public ObjectSet<TYPE_PAYMENT> TYPE_PAYMENT
        {
            get { return _tYPE_PAYMENT  ?? (_tYPE_PAYMENT = CreateObjectSet<TYPE_PAYMENT>("TYPE_PAYMENT")); }
        }
        private ObjectSet<TYPE_PAYMENT> _tYPE_PAYMENT;
    
        public ObjectSet<USER> USERs
        {
            get { return _uSERs  ?? (_uSERs = CreateObjectSet<USER>("USERs")); }
        }
        private ObjectSet<USER> _uSERs;

        #endregion
    }
}
