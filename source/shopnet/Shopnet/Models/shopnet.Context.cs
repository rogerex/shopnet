//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace Shopnet.Models
{
    public partial class ShopnetEntities : ObjectContext
    {
        public const string ConnectionString = "name=ShopnetEntities";
        public const string ContainerName = "ShopnetEntities";
    
        #region Constructors
    
        public ShopnetEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public ShopnetEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public ShopnetEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<Customer> Customers
        {
            get { return _customers  ?? (_customers = CreateObjectSet<Customer>("Customers")); }
        }
        private ObjectSet<Customer> _customers;
    
        public ObjectSet<DetailSale> DetailSales
        {
            get { return _detailSales  ?? (_detailSales = CreateObjectSet<DetailSale>("DetailSales")); }
        }
        private ObjectSet<DetailSale> _detailSales;
    
        public ObjectSet<Item> Items
        {
            get { return _items  ?? (_items = CreateObjectSet<Item>("Items")); }
        }
        private ObjectSet<Item> _items;
    
        public ObjectSet<Payment> Payments
        {
            get { return _payments  ?? (_payments = CreateObjectSet<Payment>("Payments")); }
        }
        private ObjectSet<Payment> _payments;
    
        public ObjectSet<Product> Products
        {
            get { return _products  ?? (_products = CreateObjectSet<Product>("Products")); }
        }
        private ObjectSet<Product> _products;
    
        public ObjectSet<Provider> Providers
        {
            get { return _providers  ?? (_providers = CreateObjectSet<Provider>("Providers")); }
        }
        private ObjectSet<Provider> _providers;
    
        public ObjectSet<Purchase> Purchases
        {
            get { return _purchases  ?? (_purchases = CreateObjectSet<Purchase>("Purchases")); }
        }
        private ObjectSet<Purchase> _purchases;
    
        public ObjectSet<Role> Roles
        {
            get { return _roles  ?? (_roles = CreateObjectSet<Role>("Roles")); }
        }
        private ObjectSet<Role> _roles;
    
        public ObjectSet<Sale> Sales
        {
            get { return _sales  ?? (_sales = CreateObjectSet<Sale>("Sales")); }
        }
        private ObjectSet<Sale> _sales;
    
        public ObjectSet<Session> Sessions
        {
            get { return _sessions  ?? (_sessions = CreateObjectSet<Session>("Sessions")); }
        }
        private ObjectSet<Session> _sessions;
    
        public ObjectSet<Stock> Stocks
        {
            get { return _stocks  ?? (_stocks = CreateObjectSet<Stock>("Stocks")); }
        }
        private ObjectSet<Stock> _stocks;
    
        public ObjectSet<TypePayment> TypePayments
        {
            get { return _typePayments  ?? (_typePayments = CreateObjectSet<TypePayment>("TypePayments")); }
        }
        private ObjectSet<TypePayment> _typePayments;
    
        public ObjectSet<User> Users
        {
            get { return _users  ?? (_users = CreateObjectSet<User>("Users")); }
        }
        private ObjectSet<User> _users;

        #endregion
    }
}
